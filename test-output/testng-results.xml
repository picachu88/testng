<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="suite1" duration-ms="3581" started-at="2022-10-27T14:03:26 CST" finished-at="2022-10-27T14:03:30 CST">
    <groups>
      <group name="loginSuccess">
        <method signature="LoginTest.loginSuccess(java.util.Map)[pri:0, instance:com.boray.cases.LoginTest@436e852b]" name="loginSuccess" class="com.boray.cases.LoginTest"/>
      </group> <!-- loginSuccess -->
    </groups>
    <test name="test1" duration-ms="3581" started-at="2022-10-27T14:03:26 CST" finished-at="2022-10-27T14:03:30 CST">
      <class name="com.boray.cases.GetUserInfoListTest">
        <test-method status="SKIP" signature="getUserListInfo()[pri:0, instance:com.boray.cases.GetUserInfoListTest@58c1670b]" name="getUserListInfo" duration-ms="0" depends-on-groups="loginSuccess" started-at="2022-10-27T14:03:30 CST" description="获取用户列表" finished-at="2022-10-27T14:03:30 CST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method GetUserInfoListTest.getUserListInfo()[pri:0, instance:com.boray.cases.GetUserInfoListTest@58c1670b] depends on not successfully finished methods in group "loginSuccess"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method GetUserInfoListTest.getUserListInfo()[pri:0, instance:com.boray.cases.GetUserInfoListTest@58c1670b] depends on not successfully finished methods in group "loginSuccess"
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserListInfo -->
      </class> <!-- com.boray.cases.GetUserInfoListTest -->
      <class name="com.boray.cases.LoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.boray.cases.LoginTest@436e852b]" name="beforeTest" is-config="true" duration-ms="1214" started-at="2022-10-27T14:03:26 CST" description="测试准备工作" finished-at="2022-10-27T14:03:27 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginSuccess(java.util.Map)[pri:0, instance:com.boray.cases.LoginTest@436e852b]" name="loginSuccess" duration-ms="1392" started-at="2022-10-27T14:03:27 CST" data-provider="getYamlData" finished-at="2022-10-27T14:03:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userName=SUPERADMIN_SEP_RAPIDS, password=rapids, expectedMsg=操作成功, expectedCode=200}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccess -->
        <test-method status="FAIL" signature="loginSuccess(java.util.Map)[pri:0, instance:com.boray.cases.LoginTest@436e852b]" name="loginSuccess" duration-ms="386" started-at="2022-10-27T14:03:29 CST" data-provider="getYamlData" finished-at="2022-10-27T14:03:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userName=SUPERADMIN_SEP_user2, password=123456, expectedMsg=操作成功, expectedCode=300}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [300] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [300] but found [200]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.boray.cases.LoginTest.loginSuccess(LoginTest.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccess -->
        <test-method status="PASS" signature="loginFail(java.util.Map)[pri:0, instance:com.boray.cases.LoginTest@436e852b]" name="loginFail" duration-ms="407" started-at="2022-10-27T14:03:29 CST" data-provider="getYamlData" finished-at="2022-10-27T14:03:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userName=failuser, password=123456, expectedMsg=登录失败,用户名或者密码错误, expectedCode=401}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFail -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.boray.cases.LoginTest@436e852b]" name="afterTest" is-config="true" duration-ms="2" started-at="2022-10-27T14:03:30 CST" description="测试结束" finished-at="2022-10-27T14:03:30 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.boray.cases.LoginTest -->
    </test> <!-- test1 -->
  </suite> <!-- suite1 -->
</testng-results>
